name: "poly"

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed

jobs:
  test:
    strategy:
      matrix:
        version: ["java-11", "java-17", "java-21"]
        project: ["agent", "server"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Add tools
        run: |
          sudo apt update
          sudo apt install -y curl git

      - name: Set Java Version
        run: echo "VENN_JAVA_VERSION=$(echo ${{ matrix.version}} | cut -d'-' -f2)" >> $GITHUB_ENV
      
      - name: Set Project
        run: echo "VENN_PROJECT=$(echo ${{ matrix.project}} | cut -d'-' -f2)" >> $GITHUB_ENV

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{ env.VENN_JAVA_VERSION }}

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.5
        with:
          cli: "latest"

      - name: Cache clojure dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-build-uberjar-${{ matrix.project }}-${{ matrix.version }}-${{ hashFiles('deps.edn', 'bb.edn') }}
          restore-keys: cljdeps-build-uberjar-${{ matrix.project }}-${{ matrix.version }}-

      - name: Install babashka
        uses: turtlequeue/setup-babashka@v1.5.2
        with:
          babashka-version: 1.3.182

      - name: Run Tests
        run: |
          clojure -M:poly test project:${{ matrix.project }}
